name: deploy

permissions:
  id-token: write  # required for requesting the JWT
  contents: read  # required for actions/checkout

on:
  push:
    branches:
        - "write-deploy-github-action"
    
#   workflow_dispatch:
#     inputs:
#       deployment_environment:
#         description: 'environment'
#         required: true
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    environment: test
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up node
      uses: actions/setup-node@v2
      with:
        node-version: 16

    - name: Assume Github OIDC role
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: us-west-2
        role-to-assume: arn:aws:iam::916098889494:role/GithubOIDCRole-MAAP-Project-maap-cdk-pgstac
        role-session-name: MAAP-CDK-pgstac-deploy

    - name: Install deployment dependencies
      run: npm install


    - name: Import stacks variables to github output
      id: import-stacks-vars-to-output
      env:
        AUTH_STACK_NAME: ${{ vars.AUTH_STACK_NAME }}
        ROLE_STACK_NAME: ${{ vars.ROLES_STACK_NAME}}
      run: bash .github/workflows/scripts/import_stacks_variables_to_github_output.sh $AUTH_STACK_NAME $ROLE_STACK_NAME

    - name: Run CDK deploy
      env:
        STAGE: test
        STAC_API_INTEGRATION_API_ARN: ${{ vars.STAC_API_INTEGRATION_API_ARN }}
        JWKS_URL: ${{ steps.import-stacks-vars-to-output.outputs.JWKS_URL }}
        DATA_ACCESS_ROLE_ARN: ${{ steps.import-stacks-vars-to-output.outputs.DATA_ACCESS_ROLE_ARN }}
      run: |
        npm install -g aws-cdk
        cdk deploy --all --require-approval never
